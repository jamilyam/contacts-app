{"version":3,"sources":["reducers/index.js","reducers/contactReducer.js","actions/actionTypes.js","api/contactApi.js","actions/contactActions.js","components/SignupForm.js","components/ContactForm.js","components/ContactComponent.js","components/ContactsComponent.js","index.js","store/configureStore.js"],"names":["rootReducer","combineReducers","contacts","state","action","type","Object","assign","contact","filter","id","ContactApi","axios","get","then","response","data","catch","error","post","delete","loadedContacts","addedContact","deletedContact","loadContacts","dispatch","getAllContacts","addContact","saveContact","deleteContact","SignupForm","initialValues","firstName","lastName","email","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","htmlFor","name","ContactForm","props","onAddClick","bind","event","preventDefault","this","refs","value","mobile","onAddContact","React","Component","ContactComponent","onDelete","onClick","className","ContactsComponent","toastr","options","timeOut","positionClass","actions","success","map","key","connect","ownProps","bindActionCreators","contactActions","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"ydAGA,IAIeA,EAJKC,YAAgB,CAClCC,SCFa,WAA2C,IAAnBC,EAAkB,uDAAZ,GAAIC,EAAQ,uCACvD,OAAQA,EAAOC,MACb,ICJ2B,kBDKzB,OAAOD,EAAOF,SAEhB,ICNyB,gBDOvB,MAAM,GAAN,mBACKC,GADL,CAEEG,OAAOC,OAAO,GAAIH,EAAOI,WAG7B,ICX2B,kBDYzB,OAAOL,EAAMM,QAAO,SAAAD,GAAO,OAAIA,EAAQE,KAAON,EAAOM,MAEvD,QACE,OAAOP,M,sFEfQQ,E,+GAEnB,OAAOC,IAAMC,IAAI,sEACfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACN,MAAMA,O,uCAIR,OAAON,IAAMC,IAAI,iBACfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACN,MAAMA,O,kCAIUV,GAClB,OAAOI,IAAMO,KAAK,gBAAiBX,GACjCM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACN,MAAMA,O,oCAIYR,GACpB,OAAOE,IAAMQ,OAAO,iBAAmBV,GACrCI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACN,MAAMA,S,KC3BH,SAASG,EAAenB,GAC7B,MAAO,CAAEG,KFJoB,kBEISH,YAGjC,SAASoB,EAAad,GAC3B,MAAO,CAAEH,KFPkB,gBEOSG,WAG/B,SAASe,EAAeb,GAC7B,MAAO,CAAEL,KFVoB,kBEUSK,MAGjC,SAASc,IACd,OAAO,SAAAC,GACL,OAAOd,EAAWe,iBAAiBZ,MAAK,SAAAZ,GACtCuB,EAASJ,EAAenB,OACvBe,OAAM,SAAAC,GACP,MAAMA,MAKL,SAASS,EAAWnB,GACzB,OAAO,SAAAiB,GACL,OAAOd,EAAWiB,YAAYpB,GAASM,MAAK,SAAAN,GAAO,OACjDiB,EAASH,EAAad,OACtBS,OAAM,SAAAC,GACN,MAAMA,MAKL,SAASW,EAAcnB,GAC5B,OAAO,SAAAe,GACL,OAAOd,EAAWkB,cAAcnB,GAAII,MAAK,kBACvCW,EAASF,EAAeb,OACxBO,OAAM,SAAAC,GACN,MAAMA,M,oBCEGY,EAtCI,WACjB,OACE,kBAAC,IAAD,CACEC,cAAe,CAAEC,UAAW,GAAIC,SAAU,GAAIC,MAAO,IACrDC,iBAAkBC,IAAW,CAC3BJ,UAAWI,MACRC,IAAI,GAAI,iCACRC,SAAS,YACZL,SAAUG,MACPC,IAAI,GAAI,iCACRC,SAAS,YACZJ,MAAOE,MACJF,MAAM,yBACNI,SAAS,cAEdC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACTC,MAAMC,KAAKC,UAAUL,EAAQ,KAAM,IACnCC,GAAc,KACb,OAGL,kBAAC,IAAD,KACE,2BAAOK,QAAQ,aAAf,cACA,kBAAC,IAAD,CAAOC,KAAK,YAAY1C,KAAK,SAC7B,kBAAC,IAAD,CAAc0C,KAAK,cACnB,2BAAOD,QAAQ,YAAf,aACA,kBAAC,IAAD,CAAOC,KAAK,WAAW1C,KAAK,SAC5B,kBAAC,IAAD,CAAc0C,KAAK,aACnB,2BAAOD,QAAQ,SAAf,iBACA,kBAAC,IAAD,CAAOC,KAAK,QAAQ1C,KAAK,UACzB,kBAAC,IAAD,CAAc0C,KAAK,UACnB,4BAAQ1C,KAAK,UAAb,aCjCa2C,E,kDACjB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,WAAa,EAAKA,WAAWC,KAAhB,gBAFD,E,uDAKRC,GACTA,EAAMC,iBACN,IAAI7C,EAAU,GACdA,EAAQuC,KAAOO,KAAKC,KAAKR,KAAKS,MAC9BhD,EAAQiD,OAASH,KAAKC,KAAKE,OAAOD,MAClChD,EAAQ0B,MAAQoB,KAAKC,KAAKrB,MAAMsB,MAChCF,KAAKL,MAAMS,aAAalD,K,+BAItB,OACE,6BACE,0BAAM+B,SAAUe,KAAKJ,YACnB,kBAAC,EAAD,Y,GAnB2BS,IAAMC,WCD1BC,E,kDACnB,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,SAAW,EAAKA,SAASX,KAAd,gBAFC,E,uDAMjBG,KAAKL,MAAMa,SAASR,KAAKL,MAAMvC,M,+BAI/B,OACE,4BACE,4BAAK4C,KAAKL,MAAMF,MAChB,4BAAKO,KAAKL,MAAMQ,QAChB,4BAAKH,KAAKL,MAAMf,OAChB,4BAAI,4BAAQ6B,QAAST,KAAKQ,SAAUE,UAAU,yBAA1C,gB,GAhBkCL,IAAMC,WCM9CK,E,kDACJ,WAAYhB,GAAQ,IAAD,6BACjB,cAAMA,GACNiB,IAAOC,QAAQC,QAAU,IACzBF,IAAOC,QAAQE,cAAgB,qBAC/B,EAAK1C,WAAa,EAAKA,WAAWwB,KAAhB,gBAClB,EAAKtB,cAAgB,EAAKA,cAAcsB,KAAnB,gBALJ,E,uDAQR3C,GACT8C,KAAKL,MAAMqB,QAAQ3C,WAAWnB,GAC3BM,MAAK,kBAAKoD,IAAOK,QAAQ,oBACzBtD,OAAM,SAAAC,GACLyB,MAAMzB,Q,oCAIER,GACZ4C,KAAKL,MAAMqB,QAAQzC,cAAcnB,GAC9BI,MAAK,kBAAKoD,IAAOK,QAAQ,sBACzBtD,OAAM,SAAAC,GACLyB,MAAMzB,Q,+BAIF,IAAD,OACP,OACA,yBAAK8C,UAAU,aACb,6BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,iBACX,wCAEJ,yBAAKA,UAAU,cACb,2BAAOA,UAAU,uCACf,+BACE,4BACE,oCACA,sCACA,qCACA,+BAGJ,+BACGV,KAAKL,MAAM/C,SAASsE,KAAI,SAAAhE,GAAO,OACZ,kBAAC,EAAD,CAAkBiE,IAAKjE,EAAQE,GAAIA,GAAIF,EAAQE,GAC7CqC,KAAMvC,EAAQuC,KAAMU,OAAQjD,EAAQiD,OAAQvB,MAAO1B,EAAQ0B,MAC3D4B,SAAU,EAAKjC,wBAO/C,yBAAKmC,UAAU,YACb,kBAAC,EAAD,CAAaN,aAAcJ,KAAK3B,oB,GAzDViC,aAiFjBc,mBAZf,SAAyBvE,EAAOwE,GAC9B,MAAO,CACLzE,SAAUC,EAAMD,aAIpB,SAA4BuB,GAC1B,MAAO,CACL6C,QAASM,YAAmBC,EAAgBpD,MAIjCiD,CAA6CT,GClFtDa,ECFGC,YACL/E,EACA,GACAgF,YAAgBC,MDApBH,EAAMrD,SAASD,KAEf0D,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OACWM,SAASC,eAAe,U","file":"static/js/main.8e664049.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\nimport contacts from './contactReducer';\n\nconst rootReducer = combineReducers({\n  contacts\n});\n\nexport default rootReducer;\n","import * as types from '../actions/actionTypes';\n\nexport default function contactReducer(state=[], action) {\n  switch (action.type) {\n    case types.LOADED_CONTACTS:\n      return action.contacts;\n\n    case types.ADDED_CONTACT:\n      return [\n        ...state,\n        Object.assign({}, action.contact)\n      ];\n\n    case types.DELETED_CONTACT:\n      return state.filter(contact => contact.id !== action.id);\n\n    default:\n      return state;\n  }\n}\n","export const LOADED_CONTACTS = 'LOADED_CONTACTS';\nexport const ADDED_CONTACT = 'ADDED_CONTACT';\nexport const DELETED_CONTACT = 'DELETED_CONTACT';\n","import axios from 'axios';\n\nexport default class ContactApi {\n\tstatic showAllContacts() {\n\t\treturn axios.get('https://my-json-server.typicode.com/RomanChasovitin/demo-api/users')\n\t\t\t.then(response => response.data)\n\t\t\t.catch(error => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\tstatic getAllContacts() {\n\t\treturn axios.get('/api/contacts')\n\t\t\t.then(response => response.data)\n\t\t\t.catch(error => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tstatic saveContact(contact) {\n\t\treturn axios.post('/api/contacts', contact)\n\t\t\t.then(response => response.data)\n\t\t\t.catch(error => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\tstatic deleteContact(id) {\n\t\treturn axios.delete('/api/contacts/' + id)\n\t\t\t.then(response => response.data)\n\t\t\t.catch(error => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n}\n","import * as types from './actionTypes';\nimport ContactApi from '../api/contactApi';\n\nexport function loadedContacts(contacts) {\n  return { type: types.LOADED_CONTACTS, contacts};\n}\n\nexport function addedContact(contact) {\n  return { type: types.ADDED_CONTACT, contact};\n}\n\nexport function deletedContact(id) {\n  return { type: types.DELETED_CONTACT, id};\n}\n\nexport function loadContacts() {\n  return dispatch => {\n    return ContactApi.getAllContacts().then(contacts => {\n      dispatch(loadedContacts(contacts));\n    }).catch(error => {\n      throw(error);\n    });\n  };\n}\n\nexport function addContact(contact) {\n  return dispatch => {\n    return ContactApi.saveContact(contact).then(contact =>\n      dispatch(addedContact(contact))\n    ).catch(error => {\n      throw error;\n    });\n  };\n}\n\nexport function deleteContact(id) {\n  return dispatch => {\n    return ContactApi.deleteContact(id).then(() =>\n      dispatch(deletedContact(id))\n    ).catch(error => {\n      throw error;\n    });\n  };\n}\n","import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst SignupForm = () => {\n  return (\n    <Formik\n      initialValues={{ firstName: '', lastName: '', email: '' }}\n      validationSchema={Yup.object({\n        firstName: Yup.string()\n          .max(15, 'Must be 15 characters or less')\n          .required('Required'),\n        lastName: Yup.string()\n          .max(20, 'Must be 20 characters or less')\n          .required('Required'),\n        email: Yup.string()\n          .email('Invalid email address')\n          .required('Required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      <Form>\n        <label htmlFor=\"firstName\">First Name</label>\n        <Field name=\"firstName\" type=\"text\" />\n        <ErrorMessage name=\"firstName\" />\n        <label htmlFor=\"lastName\">Last Name</label>\n        <Field name=\"lastName\" type=\"text\" />\n        <ErrorMessage name=\"lastName\" />\n        <label htmlFor=\"email\">Email Address</label>\n        <Field name=\"email\" type=\"email\" />\n        <ErrorMessage name=\"email\" />\n        <button type=\"submit\">Submit</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default SignupForm;","import React from 'react';\nimport SignupForm from './SignupForm';\n\nexport default class ContactForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.onAddClick = this.onAddClick.bind(this);\n    }\n\n    onAddClick(event) {\n      event.preventDefault();\n      let contact = {};\n      contact.name = this.refs.name.value;\n      contact.mobile = this.refs.mobile.value;\n      contact.email = this.refs.email.value;\n      this.props.onAddContact(contact);\n    }\n\n    render() {\n        return (\n          <div>\n            <form onSubmit={this.onAddClick}>\n              <SignupForm/>\n            </form>\n          </div>\n          \n        );\n    }\n}\n\n/* <div>\n            <form onSubmit={this.onAddClick}>\n              <div className=\"form-group\">\n                <label>Name</label>\n                <input type=\"text\" className=\"form-control\" ref=\"name\" required/>\n              </div>\n              <div className=\"form-group\">\n                <label>Mobile</label>\n                <input type=\"text\"  className=\"form-control\" ref=\"mobile\" required/>\n              </div>\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input type=\"email\"  className=\"form-control\" ref=\"email\" required/>\n              </div>\n              <div className=\"form-group\">\n                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-xs btn-primary\"/>\n              </div>\n            </form>\n          </div> */","import React from 'react';\n\nexport default class ContactComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete() {\n    this.props.onDelete(this.props.id);\n  }\n\n  render() {\n    return (\n      <tr>\n        <td>{this.props.name}</td>\n        <td>{this.props.mobile}</td>\n        <td>{this.props.email}</td>\n        <td><button onClick={this.onDelete} className=\"btn btn-xs btn-danger\">Delete</button></td>\n      </tr>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport toastr from 'toastr';\nimport * as contactActions from '../actions/contactActions';\nimport ContactForm from './ContactForm';\nimport ContactComponent from './ContactComponent';\n\nclass ContactsComponent extends Component {\n  constructor(props) {\n    super(props);\n    toastr.options.timeOut = 1000;\n    toastr.options.positionClass = \"toast-bottom-right\";\n    this.addContact = this.addContact.bind(this);\n    this.deleteContact = this.deleteContact.bind(this);\n  }\n\n  addContact(contact) {\n    this.props.actions.addContact(contact)\n      .then(()=> toastr.success('Contact added'))\n      .catch(error => {\n        alert(error);\n      });\n  }\n\n  deleteContact(id) {\n    this.props.actions.deleteContact(id)\n      .then(()=> toastr.success('Contact deleted'))\n      .catch(error => {\n        alert(error);\n      });\n  }\n\n  render() {\n    return (\n    <div className=\"container\">\n      <br/>\n      <div className=\"row\">\n        <div className=\"col-sm-8\">\n          <div className='panel panel-primary'>\n            <div className='panel-heading'>\n                <b>Contacts</b>\n            </div>\n            <div className='panel-body'>\n              <table className='table table-striped table-condensed'>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Mobile</th>\n                    <th>Email</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.props.contacts.map(contact =>\n                                      <ContactComponent key={contact.id} id={contact.id}\n                                        name={contact.name} mobile={contact.mobile} email={contact.email}\n                                        onDelete={this.deleteContact} />\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-4\">\n          <ContactForm onAddContact={this.addContact} />\n        </div>\n      </div>\n    </div>);\n  }\n}\n\n// ContactsComponent.propTypes = {\n//   contacts: React.PropTypes.array.isRequired,\n//   actions: React.PropTypes.object.isRequired\n// };\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    contacts: state.contacts\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(contactActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsComponent);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport configureStore from './store/configureStore';\nimport ContactsComponent from './components/ContactsComponent';\nimport {loadContacts} from './actions/contactActions';\n\nconst store = configureStore();\nstore.dispatch(loadContacts());\n\nReactDOM.render(\n  <Provider store={store}>\n    <ContactsComponent/>\n  </Provider>, document.getElementById('root'));\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers';\nimport thunk from 'redux-thunk';\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    {},\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}